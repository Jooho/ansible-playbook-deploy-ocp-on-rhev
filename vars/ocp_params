# OCP Cluster
ansible_ssh_user: root
ansible_become: true
debug_level: 2
containerized: false
osm_use_cockpit: true
openshift_disable_check: disk_availability,memory_availability
#  - docker_storage
dynamic_volumes_check: False
openshift_release: "3.6"
openshift_deployment_type: openshift-enterprise
#openshift_version: "3.6"
openshift_pkg_version: "-3.6.173.0.96"
#docker_version: "1.12.6"

# Cluster
openshift_master_default_subdomain: "{{ocp_cluster_subdomain}}"
openshift_master_cluster_hostname: "masters-{{hostvars['localhost'].cluster_tag}}.{{ocp_dns_domain}}"
openshift_master_cluster_public_hostname: "{% if 'lb' in groups%}{{groups['lb'][0]}}{% else %}{{openshift_master_cluster_hostname}}{% endif %}"
openshift_master_cluster_method: "native"
osm_default_node_selector: "role=app"
#openshift_master_api_port: 443
#openshift_master_console_port: 443

# Enable API service auditing
openshift_master_audit_config: {"enabled": true, "auditFilePath": "/var/log/openpaas-oscp-audit/openpaas-oscp-audit.log", "maximumFileRetentionDays": 14, "maximumFileSizeMegabytes": 500, "maximumRetainedFiles": 5}



# CRIO
#openshift_use_crio: True
# Force the registry to use for the container-engine/crio system container. By default the registry
#openshift_crio_systemcontainer_image_override: "registry.example.com/cri-o:latest"

# Docker
openshift_docker_options: '--log-driver=json-file --signature-verification=False --selinux-enabled --log-opt max-size=1M --log-opt max-file=3 -l warn --ipv6=false'

# Identity
openshift_master_identity_providers: [{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
openshift_master_htpasswd_users: {'joe': '$apr1$e/IdW2fy$C81mY.UvlYLTjbsg3zvG./', 'sue': '$apr1$WnnI.8Ce$KDA5pr/UsmS3wtL5lEr7d/'}


# Networking
os_sdn_network_plugin_name: "redhat/openshift-ovs-multitenant"
openshift_portal_net: "172.30.0.0/16"
osm_cluster_network_cidr: "10.128.0.0/14"
osm_host_subnet_length: "8"


# Registry
# Validity of the auto-generated certificate in days (optional)
openshift_hosted_registry_cert_expire_days: 730
openshift_hosted_registry_selector: 'region=infra'
openshift_hosted_registry_storage_kind: nfs
openshift_hosted_registry_storage_access_modes: ['ReadWriteMany']
openshift_hosted_registry_storage_host: "{{nfs_server_ip}}"
# nfs_directory must conform to DNS-1123 subdomain must consist of lower case
# alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character
openshift_hosted_registry_storage_nfs_directory: "{{nfs_mount_point}}"
openshift_hosted_registry_storage_volume_name: registry
openshift_hosted_registry_storage_volume_size: 5Gi

# Router
openshift_hosted_router_selector: 'region=infra'

# Metrics
openshift_metrics_install_metrics: true
openshift_metrics_storage_kind: dynamic
openshift_metrics_storage_volume_size: 5Gi
#openshift_metrics_storage_kind: nfs
#openshift_metrics_storage_access_modes: ['ReadWriteOnce']
#openshift_metrics_storage_host: "{{nfs_server_ip}}"
#openshift_metrics_storage_nfs_directory: "{{nfs_mount_point}}"
#openshift_metrics_storage_volume_name: metrics
#openshift_metrics_storage_labels: {'storage': 'metrics'}
#openshift_metrics_hawkular_hostname: hawkular-metrics.example.com
# Configure the prefix and version for the component images
#openshift_metrics_image_prefix: docker.io/openshift/origin-
#openshift_metrics_image_version: v3.7
# when openshift_deployment_type: 'openshift-enterprise'
#openshift_metrics_image_prefix: registry.access.redhat.com/openshift3/
#openshift_metrics_image_version: v3.7
#openshift_metrics_storage_kind: dynamic


# Logging
openshift_logging_install_logging: true
openshift_logging_storage_kind: dynamic
openshift_logging_es_memory_limit: 4G
openshift_logging_storage_volume_size: 5Gi
openshift_logging_es_nodeselector: {"role": "infra"}
#openshift_logging_storage_kind: nfs
#openshift_logging_storage_access_modes: ['ReadWriteOnce']
#openshift_logging_storage_host: "{{nfs_server_ip}}"
#openshift_logging_storage_nfs_directory: "{{nfs_mount_point}}"
#openshift_logging_storage_volume_name: logging
#openshift_logging_storage_labels: {'storage': 'logging'}
#openshift_logging_es_cluster_size: 3
# Configure the number of elastic search nodes, unless you're using dynamic provisioning
# this value must be 1
#openshift_logging_es_cluster_size: 1
# Configure the prefix and version for the component images
#openshift_logging_image_prefix: docker.io/openshift/origin-
#openshift_logging_image_version: v3.7.0
# when openshift_deployment_type: 'openshift-enterprise'
#openshift_logging_image_prefix: registry.access.redhat.com/openshift3/
#openshift_logging_image_version: 3.7.0


# Prometheus
openshift_hosted_prometheus_deploy: false
openshift_prometheus_node_selector: {"region": "app"}
openshift_prometheus_storage_kind: nfs
openshift_prometheus_storage_access_modes: ['ReadWriteOnce']
openshift_prometheus_storage_host: "{{nfs_server_ip}}"
openshift_prometheus_storage_nfs_directory: "{{nfs_mount_point}}"
openshift_prometheus_storage_volume_name: prometheus
openshift_prometheus_storage_volume_size: 5Gi
#openshift_prometheus_storage_labels: {'storage': 'prometheus'}
openshift_prometheus_storage_type: 'pvc'
openshift_prometheus_storage_class: managed-nfs-storage
# For prometheus-alertmanager
openshift_prometheus_alertmanager_storage_kind: nfs
openshift_prometheus_alertmanager_storage_access_modes: ['ReadWriteOnce']
openshift_prometheus_alertmanager_storage_host: "{{nfs_server_ip}}"
openshift_prometheus_alertmanager_storage_nfs_directory: "{{nfs_mount_point}}"
openshift_prometheus_alertmanager_storage_volume_name: prometheus-alertmanager
openshift_prometheus_alertmanager_storage_volume_size: 5Gi
#openshift_prometheus_alertmanager_storage_labels: {'storage': 'prometheus-alertmanager'}
openshift_prometheus_alertmanager_storage_type: 'pvc'
openshift_prometheus_alertmanager_storage_class: managed-nfs-storage
# For prometheus-alertbuffer
openshift_prometheus_alertbuffer_storage_kind: nfs
openshift_prometheus_alertbuffer_storage_access_modes: ['ReadWriteOnce']
openshift_prometheus_alertbuffer_storage_host: "{{nfs_server_ip}}"
openshift_prometheus_alertbuffer_storage_nfs_directory: "{{nfs_mount_point}}"
openshift_prometheus_alertbuffer_storage_volume_name: prometheus-alertbuffer
openshift_prometheus_alertbuffer_storage_volume_size: 5Gi
#openshift_prometheus_alertbuffer_storage_labels: {'storage': 'prometheus-alertbuffer'}
openshift_prometheus_alertbuffer_storage_type: 'pvc'
openshift_prometheus_alertbuffer_storage_class: managed-nfs-storage

# CFME project
#openshift_management_project: openshift-management
#openshift_management_project_description: CloudForms Management Engine
#openshift_management_app_template: cfme-template
#openshift_management_storage_class: nfs_external
#openshift_management_install_beta: true
#openshift_management_template_parameters: {'APPLICATION_MEM_REQ': '3000Mi', 'POSTGRESQL_MEM_REQ': '1Gi', 'ANSIBLE_MEM_REQ': '512Mi', 'APPLICATION_VOLUME_CAPACITY': '5Gi', 'DATABASE_VOLUME_CAPACITY': '10Gi'}
#openshift_management_storage_nfs_external_hostname: "{{nfs_server_ip}}"
#openshift_management_storage_nfs_base_dir: "{{nfs_mount_point}}"


# Enable service catalog
openshift_enable_service_catalog: false

# Service broker
template_service_broker_install: false

# TSB node selector
template_service_broker_selector: {'region': 'infra'}
# Force a specific prefix (IE: registry) to use when pulling the service catalog image
# NOTE: The registry all the way up to the start of the image name must be provided. Two examples
# below are provided.
#openshift_service_catalog_image_prefix: docker.io/openshift/origin-
#openshift_service_catalog_image_prefix: registry.access.redhat.com/openshift3/ose-
# Force a specific image version to use when pulling the service catalog image
#openshift_service_catalog_image_version: v3.7

# Configure one of more namespaces whose templates will be served by the TSB
#openshift_template_service_broker_namespaces: ['openshift']

# masterConfig.volumeConfig.dynamicProvisioningEnabled, configurable as of 1.2/3.2, enabled by default
#openshift_master_dynamic_provisioning_enabled: False


# master environments.
#openshift_master_api_env_vars: {"ENABLE_HTTP2": "true"}
#openshift_master_controllers_env_vars: {"ENABLE_HTTP2": "true"}
#openshift_node_env_vars: {"ENABLE_HTTP2": "true"}


