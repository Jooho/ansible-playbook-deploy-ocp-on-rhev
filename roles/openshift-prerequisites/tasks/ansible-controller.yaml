---
#- shell: subscription-manager repos --list-enabled  |grep 'Repo ID'|awk  '{print $3}'
#  register: enabled_repo_list
#
#- name: Disable unneeded repositories
#  command: subscription-manager repos --disable='*'
#  when: need_repo_list|difference(enabled_repo_list.stdout_lines)|length != 0 
#
#- name: Enable OpenShift repositories
#  command: subscription-manager repos --enable="{{item}}"
#  with_items:
#    - "{{ need_repo_list }}"
#  when: need_repo_list|difference(enabled_repo_list.stdout_lines)|length != 0

- set_fact:
    openshift_ansible_pkg_name: "openshift-ansible-{{openshift_ansible_version}}"
  when: openshift_ansible_version != ''

- import_tasks: ./manage-repositories.yaml

- name: Install essential packages
  shell: yum install -y wget git yum-utils net-tools bind-utils iptables-services bridge-utils bash-completion kexec-tools sos psacct sshpass 

- name: Install essential packages for ovirt-engine-sdk-python
  shell: yum install -y gcc libxml2-devel python-devel

- name: Uninstall the atomic-openshift-utils
  shell: yum remove -y atomic-openshift-utils atomic-openshift-clients openshift-ansible

- name: Install new version of atomic-openshift-utils 
  shell: "yum install -y atomic-openshift-clients {{openshift_ansible_pkg_name}}"

# Too slow
#  package:
#    use: yum
#    name: "{{ item }}"
#    state: latest
#  with_items: ['iptables', 'iptables-services', 'NetworkManager', 'wget', 'git', 'net-tools', 'bind-utils',
#               'iptables-services', 'bridge-utils', 'bash-completion', 'kexec-tools', 'sos', 'psacct',
#               'atomic-openshift-utils', 'atomic-openshift-excluder', 'atomic-openshift-docker-excluder']

- name: Check if ssh key exist
  stat:
    path: "~/.ssh/id_rsa"
  register: ssh_exist

- name: Generate ssh key 
  shell: ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa -q -N ""
  args:
    creates: ~/.ssh/id_rsa
  when: not ssh_exist.stat.exists

- name: Determine if firewalld is installed
  yum:
    name: "firewalld"
    state: present
  register: firewalld_installed

- name: Stop firewalld
  service:
    name: firewalld
    state: stopped
    enabled: false

- name: Start iptables
  service:
    name: iptables
    state: stopped
    enabled: false

- name: Diable Selinux
  selinux:
    state: disabled
